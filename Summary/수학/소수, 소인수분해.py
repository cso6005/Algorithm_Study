'''
1. 소수 구하기

https://myjamong.tistory.com/139
풀이3
마지막 풀이는 두번째 풀이의 원리를 조금 인용해서 소수를 판별하는 가장 효율적인 방법이라고 생각한다.
 해당 숫자의 √N 까지 확인하는 방법이다. 이 원리는 약수의 중심을 구하는 방법이다. 예를들어 80의 약수는 아래와 같다.

1, 2, 4, 5, 8, 10, 16, 20, 40, 80
각 숫자들의 곱이 80이되는 쌍을 같은 색으로 표시했다. 1:80, 2:40, 4:20, 5:16, 8:10. 
√80의 값은 대략 8.xxx의 값이 나온다. 
즉 약수들의 곱으로 봤을때 루트를 씌운 값이 중간값이 된다. 
이 원리는 이용하여 2에서부터 √N의 값까지 검색을한다며 
이후의 값은 확인할 필요가 없게 된고 시간복잡도는 O(√N)이 된다.
    (루트 => math.sqrt(대상))
'''

'''
2. 소인수 분해
https://mathbang.net/200
'''
# 어차피 소인수분해는 인수인 소수로 나누는 것
# 애초에 소수판단 범위 내에서 하면 됨
# 소수도 소인수분해되는 조건도 애초에 나머지가 0 이냐 아니냐가 판단 조건이기 때문에
# 처음한 방법처럼 따로 소수 판단함수를 넣을 필요가 없다. 

import sys
import math
N = int(sys.stdin.readline().strip())

for i in range(2, math.floor(math.sqrt(N))+1):
    while N%i == 0:
        print(i)
        N //= i
if N!=1:
    print(N)

'''
3. 에레스토테레스의 체
: 소수를 빠르게 찾는 방법

https://namu.wiki/w/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98%20%EC%B2%B4
'''

